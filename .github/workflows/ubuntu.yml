name: OMC 20.04

on:
  workflow_dispatch:
    branches: [ $default-branch, master]
  push:
    branches: [ $default-branch, master]
  pull_request:
    branches:  [ $default-branch, master]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install wget zip unzip tar make diffutils patch autoconf automake m4 pkg-config libtool flex bison libcurl4-nss-dev opencl-headers libopenblas-pthread-dev libopenblas-dev clang gfortran cmake ccache build-essential libhdf5-dev python3 python3-pip python3-wheel liblpsolve55-dev libexpat1-dev libncurses-dev libreadline-dev libopenscenegraph-dev libqt5webkit5-dev libqt5svg5-dev libqt5xmlpatterns5-dev libqt5opengl5-dev qt5-default libsundials-dev coinor-libipopt-dev libczmq-dev libzmqpp-dev libgc-dev default-jre-headless antlr3 libantlr3c-dev doxygen libboost-program-options-dev libboost-filesystem-dev 

    - name: Configure
      run: |
        mkdir build
        cd build
        cmake .. -Wno-dev -DCMAKE_INSTALL_PREFIX=$HOME/.local

    - name: Build OMC
      run: |
        cd build
        make -j2 omc

    - name: Build Whatever Else
      run: |
        cd build
        make -j2

    - name: Install
      run: |
        cd build
        mkdir tempinst
        DESTDIR=tempinst make -j2 install

    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: omc-installed
        path: build/tempinst

    - name: Upload cmake logs
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: cmake-logs
        path: build/CMakeFiles/*.log


# vim: ts=2:sw=2:et
